<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

<!-- Spring -->
    <context-param>
	    <param-name>contextConfigLocation</param-name>
	    <param-value>
	        /WEB-INF/spring-context.xml
	        /WEB-INF/security-context.xml
	    </param-value>
	</context-param>
	<listener>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>	
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
   

      <!--Define a filter to enable Spring Security, be sure to use the suggested name 'springSecurityFilterChain'--> 
	<filter>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>    
    
    
          <error-page>
  <error-code>404</error-code>
  <location>/404.jsp</location>
 </error-page>
  
 <!-- With Servlet 3.0 and above general error page is possible -->
 <error-page>
  <location>/error.jsp</location>
 </error-page>
    
    
    <!-- Jersey -->
<servlet>
      <servlet-name>Jersey Spring</servlet-name>
      <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
      <init-param>
        <param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
        <param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
      </init-param>
      <init-param>
        <param-name>com.sun.jersey.config.property.packages</param-name>
        <param-value>com.muni.fi.pa165.rest</param-value>
      </init-param>
      </servlet>
    <servlet-mapping>
      <servlet-name>Jersey Spring</servlet-name>
      <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
 

    <!-- JSTL -->
    <context-param>
        <description>JSTL tags will use localized string from the same source as Stripes</description>
        <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
        <param-value>StripesResources</param-value>
    </context-param>

    <!-- Stripes -->
    <filter>
        <description>Stripes main conf</description>
        <display-name>Stripes Filter</display-name>
        <filter-name>StripesFilter</filter-name>
        <filter-class>net.sourceforge.stripes.controller.StripesFilter</filter-class>
        <init-param>
            <description>where Stripes searches for ActionBeans</description>
            <param-name>ActionResolver.Packages</param-name>
            <param-value>com.muni.fi.pa165.actions</param-value>
        </init-param>
        <init-param>
            <description>locales and encodings in the app</description>
            <param-name>LocalePicker.Locales</param-name>
            <param-value>cs:utf-8,en:utf-8,ru:utf-8</param-value>
        </init-param>
        <init-param>
            <description>Stripes injects Spring beans</description>
            <param-name>Interceptor.Classes</param-name>
            <param-value>net.sourceforge.stripes.integration.spring.SpringInterceptor</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>StripesFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <display-name>Stripes Dynamic Mapping Filter</display-name>
        <filter-name>DynamicMappingFilter</filter-name>
        <filter-class>net.sourceforge.stripes.controller.DynamicMappingFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>DynamicMappingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>  
    



</web-app>
